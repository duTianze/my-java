@startuml
enum ItemType {
+  ANY
+  WEAPON
+  RING
+  POTION
}
class TreasureChest {
- List<Item> items
- ItemType type
+ Iterator<Item> iteratorByType(ItemType)
+ Iterator<Item> iterator()
}
class TreasureChest.TreasureChestItemIterator {
- int idx
+ boolean hasNext()
+ Item next()
- int findNextIdx()
}
class Item {
- ItemType type
- String name
}
class TreeNode {
- T val
- TreeNode<T> left
- TreeNode<T> right
+ void insert(T)
- TreeNode<T> getParentNodeOfValueToBeInserted(T)
- TreeNode<T> traverseOneLevelDown(T)
- void insertNewChild(T)
- boolean isGreaterThan(T)
- boolean isLessThanOrEqualTo(T)
+ Iterator<TreeNode<T>> iterator()
}
class TreeNode.BstIterator {
- ArrayDeque<TreeNode<T>> pathStack
+ boolean hasNext()
+ TreeNode<T> next()
- void pushPathToNextSmallest(TreeNode<T>)
}


Iterable <|.. TreasureChest
TreasureChest +.. TreasureChest.TreasureChestItemIterator
Iterator <|.. TreasureChest.TreasureChestItemIterator
Iterable <|.. TreeNode
TreeNode +.. TreeNode.BstIterator
Iterator <|.. TreeNode.BstIterator
@enduml