@startuml
class com.dutianze.designpattern.iterator.bst.TreeNode {
- T val
- TreeNode<T> left
- TreeNode<T> right
+ void insert(T)
- TreeNode<T> getParentNodeOfValueToBeInserted(T)
- TreeNode<T> traverseOneLevelDown(T)
- void insertNewChild(T)
- boolean isGreaterThan(T)
- boolean isLessThanOrEqualTo(T)
+ Iterator<TreeNode<T>> iterator()
}
class com.dutianze.designpattern.iterator.bst.TreeNode.BstIterator {
- ArrayDeque<TreeNode<T>> pathStack
+ boolean hasNext()
+ TreeNode<T> next()
- void pushPathToNextSmallest(TreeNode<T>)
}


com.dutianze.designpattern.iterator.bst.Iterable <|.. com.dutianze.designpattern.iterator.bst.TreeNode
com.dutianze.designpattern.iterator.bst.TreeNode +.. com.dutianze.designpattern.iterator.bst.TreeNode.BstIterator
com.dutianze.designpattern.iterator.bst.Iterator <|.. com.dutianze.designpattern.iterator.bst.TreeNode.BstIterator
@enduml