@startuml
abstract class Mage {
+ {abstract}Mage copy()
}
class ElfMage {
- String helpType
+ ElfMage copy()
+ String toString()
}
class ElfBeast {
- String helpType
+ ElfBeast copy()
+ String toString()
}
class ElfWarlord {
- String helpType
+ ElfWarlord copy()
+ String toString()
}
interface HeroFactory {
~ Mage createMage()
~ Warlord createWarlord()
~ Beast createBeast()
}
interface Prototype {
~ Object copy()
}
class OrcBeast {
- String weapon
+ OrcBeast copy()
+ String toString()
}
class OrcWarlord {
- String weapon
+ OrcWarlord copy()
+ String toString()
}
class HeroFactoryImpl {
- Mage mage
- Warlord warlord
- Beast beast
+ Mage createMage()
+ Warlord createWarlord()
+ Beast createBeast()
}
class OrcMage {
- String weapon
+ OrcMage copy()
+ String toString()
}
abstract class Beast {
+ {abstract}Beast copy()
}
abstract class Warlord {
+ {abstract}Warlord copy()
}

HeroFactoryImpl -up->  "-beast" Beast
HeroFactoryImpl -up->  "-warlord" Warlord
HeroFactoryImpl -up->  "-mage" Mage
Beast .up.|> Prototype
ElfBeast -left-|> Beast
ElfMage --|> Mage
ElfWarlord -up-|> Warlord
HeroFactoryImpl ..|> HeroFactory
Mage .up.|> Prototype
OrcBeast -right-|> Beast
OrcMage -up-|> Mage
OrcWarlord --|> Warlord
Warlord .up.|> Prototype
@enduml