@startuml
class Character {
- String name
- String fighterClass
- String wizardClass
- String weapon
- String spell
- List<String> abilities
}

class CharacterStepBuilder {
+ {static} NameStep newBuilder()
}
interface NameStep {
~ ClassStep name(String)
}
interface ClassStep {
~ WeaponStep fighterClass(String)
~ SpellStep wizardClass(String)
}
interface WeaponStep {
~ AbilityStep withWeapon(String)
~ BuildStep noWeapon()
}
interface SpellStep {
~ AbilityStep withSpell(String)
~ BuildStep noSpell()
}
interface AbilityStep {
~ AbilityStep withAbility(String)
~ BuildStep noMoreAbilities()
~ BuildStep noAbilities()
}
interface BuildStep {
~ Character build()
}
class CharacterSteps {
- String name
- String fighterClass
- String wizardClass
- String weapon
- String spell
- List<String> abilities
+ ClassStep name(String)
+ WeaponStep fighterClass(String)
+ SpellStep wizardClass(String)
+ AbilityStep withWeapon(String)
+ BuildStep noWeapon()
+ AbilityStep withSpell(String)
+ BuildStep noSpell()
+ AbilityStep withAbility(String)
+ BuildStep noMoreAbilities()
+ BuildStep noAbilities()
+ Character build()
}



WeaponStep ..+ CharacterStepBuilder
AbilityStep ..+ CharacterStepBuilder
ClassStep ..+ CharacterStepBuilder
CharacterSteps ..+ CharacterStepBuilder
SpellStep ..+ CharacterStepBuilder
BuildStep ..+ CharacterStepBuilder
NameStep ..+ CharacterStepBuilder
CharacterSteps ..|> NameStep 
CharacterSteps ..|> ClassStep 
CharacterSteps ..|> WeaponStep 
CharacterSteps ..|> SpellStep 
CharacterSteps ..|> AbilityStep 
CharacterSteps ..|> BuildStep 
@enduml